openapi: 3.0.0
info:
  title: Sentence Inference Multiple Choice
  version: 1.0.0
  contact:
    name: Dongjoon
  description: |
    This model finds the most appropriate sentence among multiple choice sentences to follow the main sentence. It is a way to analyze the situation through the main sentence and infer the next sentence.
    ---
          How to use:
          * Input main sentence.
          * Click add button to make inference sentence input area.
          * Input inference sentences.
          * Click "Find the most appropriate sentence." button to get result.
    ---
servers:
  - url: https://main-sentence-inference-multiple-choice-ehdwns1516.endpoint.ainize.ai/

paths:
  /generate:
    post:
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                count:
                  type: number
                items[]:
                  type: string
                context:
                  type: string
              required:
                - count
                - items[]
                - context
      responses: # Set response
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema:
                type: object
                example: {
                  "0":[
                    {
                      "generated_text" : "the cost is right so itâ€™s what I needed.It's a little difficult to get it out of my hands but once you do, the feel nice and keeps my toes from cutting. The only thing I noticed is the little plastic piece" 
                    }
                  ]
                }
        '400':
          description: "Bad Request Error"
        '429':
          description: "Too many requests"
        '500':
          description: "Server-side Error"
  /queue_clear:
    get:
      responses:
        '200':
          description: "Clear request queue"
          content:
            application/json:
              schema:
                type: string
                example: Clear
  /healthz:
    get:
      responses:
        '200':
          description: "get status of model server"
          content:
            application/json:
              schema: 
                type: string
                example: Health